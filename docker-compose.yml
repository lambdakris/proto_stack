services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_DB: todoapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  liquibase:
    depends_on:
      postgres:
        condition: service_healthy
    image: liquibase/liquibase:4.25
    environment:
      LIQUIBASE_COMMAND_URL: jdbc:postgresql://postgres:5432/todoapp
      LIQUIBASE_COMMAND_USERNAME: postgres
      LIQUIBASE_COMMAND_PASSWORD: password
      LIQUIBASE_COMMAND_CHANGELOG_FILE: db.changelog-master.yaml
    volumes:
      - ./database/liquibase/changelogs:/liquibase/changelog
    command: ["update"]

  backend:
    depends_on:
      liquibase:
        condition: service_completed_successfully
    build: 
      context: ./
      dockerfile: ./backend/Dockerfile
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/todoapp
    ports:
      - "8000:8000"  # Serving port
      - "5678:5678"  # Debugging port
    command: uv run -m debugpy --listen 0.0.0.0:5678 -m fastapi dev main.py --host 0.0.0.0 --port 8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  frontend:
    depends_on:
      backend:
        condition: service_healthy
    build: 
      context: ./
      dockerfile: ./frontend/Dockerfile
    environment:
      API_BASE_URL: http://backend:8000
    ports:
      - "8501:8501"  # Serving port
      - "5679:5679"  # Debugging port
    command: uv run -m debugpy --listen 0.0.0.0:5679 -m streamlit run main.py --server.address 0.0.0.0 --server.port 8501

volumes:
  postgres_data: